// 1== forward
// 2== backward
// 3== left
// 4== right
// 0== stop

// Define pins for Motor A
#include <SoftwareSerial.h>
SoftwareSerial HC06(0,1);
#define IN1 2  //pd2
#define IN2 3  //pd3
#define ENA A0 // PD6 (OC0A - PWM)

// Define pins for Motor B
#define IN3 4 // PD4
#define IN4 5 // PD5
#define ENB A1 // PD7 (OC0B - PWM) - Fix: ENB was incorrectly assigned the same pin as ENA

// Define pins for RGB LED
#define red  6 //pd6
#define blue 7 //pd7
#define green 8 //pb0

// Define pins for sensors
#define current_sensor 11
#define volt 10

// Define resistor values for voltage measurement
#define R1 30000
#define R2 7500

// Define global variables
int md1 = 0;
int md2 = 0;
int velocity =0;
float c1 = 0;
float c2 = 0;
float c3 = 0;
float Vin = 0;
float Vout = 0;
float analogvalue = 0;

void motors() {
  if (Serial.available() > 0) {
    String command = Serial.readStringUntil('\n'); // Read the incoming data until a newline
    
   velocity = command.substring(1).toInt(); // Extract speed value
    md1=velocity;
    md2=velocity;
    analogWrite(ENA, md1); 
    analogWrite(ENB, md2);

    // Parse and execute the command
    if (command.startsWith("1")) { // Forward
        digitalWrite(IN1, HIGH);
        digitalWrite(IN2, LOW);
        digitalWrite(IN3, HIGH);
        digitalWrite(IN4, LOW);
        delay(50);
    } 
    else if (command.startsWith("2")) { // Backward
        digitalWrite(IN1, LOW);
        digitalWrite(IN2, HIGH);
        digitalWrite(IN3, LOW);
        digitalWrite(IN4, HIGH) ;
        delay(50);
    } 
    else if (command.startsWith("3")) { // Left
        digitalWrite(IN1, LOW);
        digitalWrite(IN2, HIGH);
        digitalWrite(IN3, HIGH);
        digitalWrite(IN4, LOW);
         delay(50);
    } 
    else if (command.startsWith("4")) { // Right
        digitalWrite(IN3, LOW);
        digitalWrite(IN4, HIGH);
        digitalWrite(IN1, HIGH);
        digitalWrite(IN2, LOW);
         delay(50);
    } 
    else if (command == "0") { // Stop both motors
        analogWrite(ENA, 0);
        analogWrite(ENB, 0);
         delay(50);
    }
  }
}

void rgb() {
  if (md1 >= 170) {  // High speed
      analogWrite(red ,255);
      analogWrite(blue, 0);
      analogWrite(green, 0);
      delay(50);
  } 
  else if (md1 >= 85 && md1 < 170) { // Medium speed
      analogWrite(red, 0);
      analogWrite(blue, 255);
      analogWrite(green, 0);
       delay(50);
  } 
  else {  // Low speed
      analogWrite(red, 0);
      analogWrite(blue, 0);
      analogWrite(green, 255);
       delay(50);
  }
}

void current() {
  c1 = analogRead(current_sensor);
  c2 = (c1 / 1023.0) * 5.0;
  c3 = (((c2 - 2.50) * 1000) / 185.0); // Convert to current in Amperes
  HC06.print("Current: ");
  HC06.print(c3);
  HC06.println(" A");
  
}

void voltage() {
  analogvalue = analogRead(volt);
  Vout = (analogvalue * 5.0 / 1023.0);
  Vin = Vout * (R2 / (R1 + R2)); // Calculate input voltage
  HC06.print("Voltage: ");
  HC06.print(Vin);
  HC06.println(" V");
}

void setup() {
  // Initialize pins
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(ENA, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(ENB, OUTPUT);
  pinMode(red, OUTPUT);
  pinMode(blue, OUTPUT);
  pinMode(green, OUTPUT);
  pinMode(current_sensor, INPUT);
  pinMode(volt, INPUT);
  
  // Initialize serial communication
  Serial.begin(9600);
HC06.begin(9600);
}

void loop() {
  motors();  // Control motors based on serial commands
  rgb();     // Update RGB LED based on motor speed
  current(); // Measure current
  voltage(); // Measure voltage
}